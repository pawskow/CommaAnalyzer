match_rules(
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "choć")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "mianowicie")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "następnie")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "nie")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "ponieważ")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "potem")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "także")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "także"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "to")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "więc")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "a"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "albo"),
            equal(lower(base[0]), "lepiej")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "albo"),
            equal(lower(base[0]), "raczej")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ale"),
            equal(lower(base[0]), "i")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ani"),
            equal(lower(base[0]), "nawet")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ani"),
            equal(lower(base[0]), "też")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "chyba"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "chyba"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "czy"),
            equal(lower(base[0]), "może")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dlatego"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dlatego"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dlatego"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dopiero"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dopiero"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dopiero"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dzięki"),
            equal(lower(base[0]), "temu")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "dzięki"),
            equal(lower(base[0]), "temu"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "chociaż")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "choć")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "jednak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "kwita")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "koniec")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "tak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "ile")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "tyle")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "na"),
            equal(lower(base[0]), "który")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "który")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "tylko"),
            equal(lower(base[0]), "tyle")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "i"),
            equal(lower(base[0]), "tylko"),
            equal(lower(base[0]), "tak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ile"),
            equal(lower(base[0]), "razy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ile"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "innymi"),
            equal(lower(base[0]), "słowy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "gdyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "i")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "również")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "też")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jako"),
            equal(lower(base[0]), "też")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jako"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "jak"),
            equal(lower(base[0]), "zawsze"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "który"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "który"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "lecz"),
            equal(lower(base[0]), "i")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "lub"),
            equal(lower(base[0]), "raczej")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "mimo"),
            equal(lower(base[0]), "to")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "mimo"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "nawet"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "nawet"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "na"),
            equal(lower(base[0]), "skutek"),
            equal(lower(base[0]), "czego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "na"),
            equal(lower(base[0]), "skutek"),
            equal(lower(base[0]), "tego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "na"),
            equal(lower(base[0]), "skutek"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "po"),
            equal(lower(base[0]), "co")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "po"),
            equal(lower(base[0]), "czym")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "pod"),
            equal(lower(base[0]), "warunkiem"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "podczas"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "podczas"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "podobnie"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "pod"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "warunkiem"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "pomimo"),
            equal(lower(base[0]), "to")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "pomimo"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "potem"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "po"),
            equal(lower(base[0]), "to")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "po"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "po"),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "przy"),
            equal(lower(base[0]), "czym")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "skutkiem"),
            equal(lower(base[0]), "czego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "szczególnie"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "szczególnie"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "szczególnie"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "jakby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "skąd")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tak"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "taki"),
            equal(lower(base[0]), "sam"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tam"),
            equal(lower(base[0]), "gdzie")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tam"),
            equal(lower(base[0]), "skąd")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "ten"),
            equal(lower(base[0]), "sam"),
            equal(lower(base[0]), "co")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "teraz"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "co")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "jest")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "znaczy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "znaczy"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "znaczy"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "to"),
            equal(lower(base[0]), "znaczy"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tyle"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tylko"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tylko"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tylko"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "bardziej"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "bardziej"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "bardziej"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "przypadku"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "przypadku"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "przypadku"),
            equal(lower(base[0]), "gdyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "taki"),
            equal(lower(base[0]), "sposób"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "taki"),
            equal(lower(base[0]), "sposób"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "taki"),
            equal(lower(base[0]), "sposób"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "celu"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "celu"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "miarę"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "razie"),
            equal(lower(base[0]), "gdyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "wypadku"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "wypadku"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "wypadku"),
            equal(lower(base[0]), "gdyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "właśnie"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "właśnie"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "właśnie"),
            equal(lower(base[0]), "jak")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wobec"),
            equal(lower(base[0]), "czego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wobec"),
            equal(lower(base[0]), "tego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wobec"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wprzód"),
            equal(lower(base[0]), "nim")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "przypadku"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wskutek"),
            equal(lower(base[0]), "tego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wskutek"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "wtedy"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "ten"),
            equal(lower(base[0]), "sposób")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "ten"),
            equal(lower(base[0]), "sposób"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "ten"),
            equal(lower(base[0]), "sposób"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "celu")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "celu"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "celu"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "wyniku"),
            equal(lower(base[0]), "tego")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "wyniku"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "związku"),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tym")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "w"),
            equal(lower(base[0]), "związku"),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "chwilą"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tą"),
            equal(lower(base[0]), "myślą"),
            equal(lower(base[0]), "żeby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tą"),
            equal(lower(base[0]), "myślą"),
            equal(lower(base[0]), "abyby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "powodu")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tego"),
            equal(lower(base[0]), "powodu"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tej"),
            equal(lower(base[0]), "przyczyny"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "tym"),
            equal(lower(base[0]), "zastrzeżeniem"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "zwłaszcza"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "zwłaszcza"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "zwłaszcza"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "zwłaszcza"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "zwłaszcza"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "z"),
            equal(lower(base[0]), "zastrzeżeniem"),
            equal(lower(base[0]), "że")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "aby")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "aż")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "gdy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "kiedy")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "jeśli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    );
apply(
        match(
            optional(inter(class[0], {prep})),
            equal(lower(base[0]), "że"),
            equal(lower(base[0]), "jeżeli")
        ),
        cond(
            not(isannpart(first(M), "SpojnikZlozony"))
        ),
        actions(
            mark(M, "SpojnikZlozony")
        )
    ))